version: '3.8'
services:

          
    mysql:
        restart: always
        hostname: mysql
        container_name: mysql
        image: mysql
        environment:
          PUID: 0
          PGID: 0
          TZ: "Asia/Jerusalem"
          MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
          MYSQL_ROOT_HOST: "%"
        cap_add:
          - SYS_NICE 
        ports:
          - "3306:3306"
          - "33060:33060"
        volumes:
          - /home/dima/docker-mounts/mysql/data:/var/lib/mysql
          - /home/dima/docker-mounts/mysql/etc-mysql/my.cnf:/etc/mysql/my.cnf
          - /home/dima/docker-mounts/mysql/etc-mysql/conf.d:/etc/mysql/conf.d
          - /home/dima/docker-mounts/mysql/log/mysql-slow.log:/var/log/mysql-slow.log
  
    mqtt:
        restart: always
        hostname: mqtt
        container_name: MQTT
        image: eclipse-mosquitto:latest
        environment:
          TZ: "Asia/Jerusalem"
        volumes:
          - /home/dima/docker-mounts/mqtt/data:/mosquitto/data
          - /home/dima/docker-mounts/mqtt/config:/mosquitto/config
          - /home/dima/docker-mounts/mqtt/log:/mosquitto/log
        network_mode: "bridge"
        ports:
          - "1883:1883"
          - "9001:9001"

    transmission:
        restart: always
        hostname: Transmission
        container_name: Transmission
        image: linuxserver/transmission:latest
        environment:
          TZ: "Asia/Jerusalem"
          USER: ${TRANSMISSION_USER}
          PASS: ${TRANSMISSION_PASS}
        volumes:
          - /media/dima/RouterHDD/Movies:/downloads
          - /home/dima/transmission-incomplete:/incomplete
          - /home/dima/docker-mounts/transmission:/config
        network_mode: "host"

    cloud9:
        restart: always
        hostname: cloud9
        container_name: cloud9
        image: linuxserver/cloud9:latest
        environment:
          PUID: 1000
          PGID: 1000
          TZ: "Asia/Jerusalem"
          # USERNAME: ${C9_USER}   #ALREADY SET IN NGINX
          # PASSWORD: ${C9_PASS}
        volumes:
          - /home/dima/docker-mounts:/code
          - /home/dima/platesMigration:/code/platesMigration
          - /var/run/docker.sock:/var/run/docker.sock
        network_mode: "bridge"
        ports:
          - "8000:8000"
          
    theia:
        restart: always
        hostname: theiaide
        container_name: theiaide
        image: elswork/theia
        environment:
          TZ: "Asia/Jerusalem"
        volumes:
          - /home/dima/docker-mounts:/home/project
          - /home/dima/platesMigration:/home/project/platesMigration
        network_mode: "bridge"
        ports:
          - "3000:3000"


    homeassistant:
        restart: always
        hostname: homeassistant
        container_name: Home-Assistant
        image: homeassistant/home-assistant:stable
        depends_on: 
          - mysql
          - mqtt
        labels:
          com.ouroboros.enable: "false"
        environment:
          # TZ: "Asia/Jerusalem"
          USER: ${HA_USER}
          PASS: ${HA_PASS}
        volumes:
          - /home/dima/docker-mounts/ha:/config
          - /media/dima/RouterHDD/Movies:/media/movies
          - /etc/localtime:/etc/localtime:ro
          - /etc/timezone:/etc/timezone:ro
        network_mode: "host"

    portainer:
        restart: always
        hostname: portainer
        container_name: Portrainer
        image: portainer/portainer-ce
        environment:
          TZ: "Asia/Jerusalem"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /opt/portainer:/data
        network_mode: "bridge"
        ports:
          - "9000:9000"

    ftpserver:
        restart: always
        hostname: ftp-server
        container_name: ftp-server
        image: stilliard/pure-ftpd
        environment:
          TZ: "Asia/Jerusalem"
          FTP_USER_NAME: ${FTP_USER}
          FTP_USER_PASS: ${FTP_PASS}
          FTP_USER_HOME: "/home/dima/"
        volumes:
          - /media/dima/RouterHDD/ftp:/home/dima/
          - /home/dima/docker-mounts/ftpd/passwd:/etc/pure-ftpd/passwd
        ports:
          - "21:21"
          - "30000-30009:30000-30009"
    

    nginx: 
      restart: always
      image: nginx:latest
      container_name: nginx
      privileged: true
      environment:
        PUID: 0
        PGID: 0
      volumes:
        - /home/dima/docker-mounts/nginx/etc/nginx:/etc/nginx
        - /home/dima/docker-mounts/certbot/etc/letsencrypt:/etc/letsencrypt
        - /home/dima/docker-mounts/certbot/www:/var/www/certbot
        - /media/dima/RouterHDD/ftp:/ftp
      network_mode: "host"
      

    nginx-ui:
      image: schenkd/nginx-ui:latest
      ports:
        - 8282:8080
      volumes:
        - /home/dima/docker-mounts/nginx/etc/nginx:/etc/nginx

    ouroboros:
      image: pyouroboros/ouroboros
      container_name: ouroboros
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      environment:
        - TZ=Asia/Jerusalem
        - "NOTIFIERS=${TELEGRAM_NOTIF}"
        - CLEANUP=true
        - LOG_LEVEL=info
        - SELF_UPDATE=true
        - LABEL_ENABLE=true
        - LATEST=true
        - CRON="0 6 * * *"
      restart: always
    
    # samba:
    #   image: sixeyed/samba
    #   container_name: samba
    #   restart: always
    #   environment:
    #     BRIDGE: php-local
    #   command: samba.sh -s "all;/mnt/RouterHDD;yes;no;yes;all" 
    #   volumes:
    #     - /media/dima/RouterHDD:/mnt/RouterHDD
    #   network_mode: "host"
      # ports:
      #   - "139:139"
      #   - "445:445"
      #   - "137:137/udp"
      #   - "138:138/udp"
      

      
    organizr:
      image: linuxserver/organizr
      container_name: organizr
      environment:
        - PUID=1000
        - PGID=1000
        - TZ=Asia/Jerusalem
      volumes:
        - /home/dima/docker-mounts/organizr:/config
      ports:
        - 9983:80
      restart: always
      
    certbot:
      container_name: certbotgo
      restart: always
      image: certbot/certbot
      depends_on: 
        - nginx
      environment:
        CERTBOT_EMAIL: ${CERTBOT_EMAIL}
      volumes:
        - /home/dima/docker-mounts/certbot/www:/var/www/certbot
        - /home/dima/docker-mounts/certbot/etc/letsencrypt:/etc/letsencrypt
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h & wait $${!}; done;'"
     
     
    duckdns:
      image: linuxserver/duckdns
      container_name: duckdns
      environment:
        - PUID=1000 #optional
        - PGID=1000 #optional
        - "SUBDOMAINS=${DUCKDNS_SUBDOMAIN}" #,sub2,sub3
        - "TOKEN=${DUCKDNS_TOKEN}"
        - LOG_FILE=false #optional
        - TZ=Asia/Jerusalem
      restart: always
      
    gosdm:
      image: volkszaehler/mbmd
      container_name: gosdm
      command: run -c /etc/mbmd.yaml
      cap_add:
        - SYS_ADMIN
      user: root
      depends_on:
        - mqtt
      devices:
        - /dev/ttyUSB0:/dev/ttyUSB0
      ports:
        - 63080:8080
      network_mode: "bridge"
      restart: always
      volumes:
        - /home/dima/docker-mounts/gosdm/mbmd.yaml:/etc/mbmd.yaml
      
    esphome:
      container_name: esphome
      image: esphome/esphome:latest
      volumes:
        - /home/dima/docker-mounts/esphome:/config:rw
      network_mode: host
      restart: always
      # ports:
      #   - "6052:6052"
      

    pihole:
      container_name: pihole
      hostname: pihole
      image: pihole/pihole:latest
      ports:
        - "192.168.1.141:53:53/tcp"
        - "192.168.1.141:53:53/udp"
        - "192.168.1.141:67:67/udp"
        - "0.0.0.0:1080:80/tcp"
        - "0.0.0.0:10443:443/tcp"
      environment:
        TZ: 'Asia/Jerusalem'
        WEBPASSWORD: ${PIHOLE_PASS}
      volumes:
        - '/home/dima/docker-mounts/pihole/etc-pihole/:/etc/pihole/'
        - '/home/dima/docker-mounts/pihole/etc-hosts:/etc/hosts'
        - '/home/dima/docker-mounts/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
        - '/home/dima/docker-mounts/pihole/pihole.log:/var/log/pihole.log'
      dns:
        - 127.0.0.1
        - 9.9.9.9
      cap_add:
        - NET_ADMIN
      restart: always
     
    adbserver:
      image: sorccu/adb
      hostname: adb
      container_name: adb
      restart: always
      command: sh -c "/root/.android/startup.sh & adb -a -P 5037 server nodaemon"
      network_mode: "host"
      volumes:
        - /home/dima/docker-mounts/adbserver:/root/.android
        - /etc/timezone:/etc/timezone:ro
        - /etc/localtime:/etc/localtime:ro
      environment:
        - PUID=1000
        - TZ=Asia/Jerusalem
        - LOG_LEVEL="info"
        - KEYS_PATH="./root"
      # ports:
      #  - "5037:5037"
        
    broadlinkmanager:
      container_name: broadlinkmanager
      image: techblog/broadlinkmanager
      network_mode: host
      container_name: broadlinkmanager
      restart: always
    
    phpmyadmin:
     image: phpmyadmin/phpmyadmin
     container_name: phpmyadmin
     environment:
      - PMA_ARBITRARY=1
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
     restart: always
     ports:
      - 8080:80
     volumes:
      - /sessions
      
    # motioneye:
    #   image: ccrisan/motioneye:master-amd64
    #   container_name: motioneye
    #   ports:
    #     - 8765:8765
    #   hostname: motioneye
    #   restart: "unless-stopped"
    #   # deploy:
    #   #   resources:
    #   #     reservations:
    #   #       devices:
    #   #       - count: all
    #   #         capabilities: 
    #   #           - "gpu"
    #   volumes:
    #    - /dev/dri:/dev/dri
    #    - /etc/localtime:/etc/localtime:ro
    #    - /home/dima/docker-mounts/motioneye:/etc/motioneye
    #    - /home/dima/docker-mounts/motioneye:/var/lib/motioneye
    
    jellyfin:
        hostname: jellyfin
        container_name: jellyfin
        image: jellyfin/jellyfin
        privileged: true
        network_mode: "host"
        restart: "unless-stopped"
        environment:
            TZ: "Asia/Jerusalem"
        devices:
          - /dev/dri:/dev/dri
        volumes:
          - /home/dima/docker-mounts/jellyfin/config:/config
          - /home/dima/docker-mounts/jellyfin/cache:/cache
          - /media/dima/RouterHDD/Movies:/video
          
        
    plex:
      image: lscr.io/linuxserver/plex:latest
      container_name: plex
      network_mode: host
      environment:
        - PUID=1000
        - PGID=1000
        - VERSION=docker
        - PLEX_CLAIM=claim-gLJUr6xy33rdakr-4_X3
      volumes:
        - /home/dima/docker-mounts/plex/config:/config
        - /media/dima/RouterHDD/Movies:/movies
      devices:
        - /dev/dri:/dev/dri
      restart: unless-stopped
      
    mongo:
      container_name: mongo
      image: mongo:4.4.1-bionic
      restart: unless-stopped
      environment:
        - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
        - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
        - MONGO_INITDB_DATABASE=admin
      volumes:
        - /home/dima/docker-mounts/mongo/db:/data/db
        - /home/dima/docker-mounts/mongo/db/config:/data/configdb
        - /home/dima/docker-mounts/mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      ports:
        - "27017:27017"
        
        
    apachephp:
      container_name: php
      image: tutum/apache-php
      restart: unless-stopped  
      ports:
        - "8888:80"
      environment:
        - ALLOW_OVERRIDE=true
      volumes:
        - /home/dima/docker-mounts/php:/app
        
    joal: 
      image: anthonyraymond/joal
      container_name: joal
      restart: unless-stopped
      environment:
        - joal.ui.path.prefix=${PREF}
        - joal.ui.secret-token=${JOAL_SEC}
        - spring.main.web-environment=true
        - server.port=15538
      volumes:
        - /home/dima/docker-mounts/joal:/data
      ports:
        - 15538:15538
      command: ["--joal-conf=/data"]
          
          
    openvpn:
      cap_add:
        - NET_ADMIN
      command:
        - ovpn_run
      container_name: openvpn
      environment:
        - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        - OPENVPN=/etc/openvpn
        - EASYRSA=/usr/share/easy-rsa
        - EASYRSA_CRL_DAYS=3650
        - EASYRSA_PKI=/etc/openvpn/pki
      image: myownvpn
      ipc: private
      logging:
        driver: json-file
        options: {}
      ports:
        - 1194:1194/udp
      restart: unless-stopped
      volumes:
        - /home/dima/docker-mounts/vpn-data:/etc/openvpn
    
    decompose:
      image: techblog/decompose
      container_name: decompose
      restart: always
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      ports:
        - "9090:8080"   

    filebrowser:
      container_name: filebrowser
      image: hurlenko/filebrowser
      ports:
        - 12123:8080
      volumes:
        - /media/dima/RouterHDD/:/data
        - /home/dima/docker-mounts/filebrowser:/config
      environment:
        - FB_BASEURL=/filebrowser
      restart: always

    redalert:
      image: techblog/redalert
      container_name: redalert
      restart: always
      environment:
        - MQTT_HOST=192.168.1.141
        - MQTT_USER=${MQTT_USER}
        - MQTT_PASS=${MQTT_PASS}
        - MQTT_PORT=1883
        - DEBUG_MODE=False
        - NOTIFIERS=${TELEGRAM_NOTIF}
        - REGION=*
        - INCLUDE_TEST_ALERTS=False
      restart: unless-stopped
      
    redalert_dev:
      build:
        context: ../Redalert
        dockerfile: Dockerfile
      container_name: redalert_dev
      restart: always
      environment:
        - MQTT_HOST=192.168.1.141
        - MQTT_USER=${MQTT_USER}
        - MQTT_PASS=${MQTT_PASS}
        - MQTT_PORT=1883
        - DEBUG_MODE=True
        - NOTIFIERS=${TELEGRAM_NOTIF}
        - REGION=*
        - INCLUDE_TEST_ALERTS=False
      restart: unless-stopped
      
    rtmp:
      image: alqutami/rtmp-hls
      container_name: rtmp
      restart: unless-stopped
      ports:
        - 1935:1935
        - 1936:8080
        
    duplicati:
      image: lscr.io/linuxserver/duplicati
      container_name: duplicati
      environment:
        - PUID=0
        - PGID=0
        - TZ=Europe/London
        - CLI_ARGS= #optional
      volumes:
        - /home/dima/docker-mounts/duplicati:/config
      #  - </path/to/backups>:/backups
        -  /home/dima/docker-mounts:/source
      ports:
        - 8200:8200
      restart: unless-stopped
        


volumes:
  sessions:
